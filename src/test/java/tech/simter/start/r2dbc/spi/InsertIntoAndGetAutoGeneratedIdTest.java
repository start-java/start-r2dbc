package tech.simter.start.r2dbc.spi;

import org.junit.jupiter.api.Test;
import reactor.test.StepVerifier;

/**
 * See <a href="https://github.com/r2dbc/r2dbc-spi/issues/25">Introduce possibility to retrieve generated keys with statement execution #25</a>
 *
 * @author RJ
 */
class InsertIntoAndGetAutoGeneratedIdTest extends AbstractSpiTest {
  @Override
  protected String getCreateTableSql() {
    return "create table t(id serial primary key, name varchar(255))";
  }

  /**
   * r2dbc-postgres-1.0.0-M8:
   * 1. .returnGeneratedValues() >> insert into ... values (...) returning *
   * 2. .returnGeneratedValues("id") >> insert into ... values (...) returning id
   * <p>
   * r2dbc-h2-1.0.0-M8: (not support returning)
   * 1. .returnGeneratedValues() >> insert into ... values (...)
   * 2. .returnGeneratedValues("id") >> insert into ...values (...)
   */
  @Test
  void test() {
    connection()
      .flatMapMany(c -> c.createStatement("insert into t(name) values($1), ($2)")
        .bind("$1", "name1")
        .bind("$2", "name2")
        .returnGeneratedValues("id") // or .returnGeneratedValues()
        .execute())
      .flatMap(result -> result.map((row, metadata) -> row.get("id", Integer.class)))
      .as(StepVerifier::create)
      .expectNext(1) // default auto generated id starts from 1 and forward with step 1
      .expectNext(2)
      //.consumeNextWith(id -> System.out.println("id=" + id))
      .verifyComplete();
  }
}